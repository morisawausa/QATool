# -*- coding: utf-8 -*-
from GlyphsApp import *
from vanilla import *

from abstracts.task import QATask


class Script(QATask):
	"""
	Checks font glyphs against the required OCC character set
	"""

	def details(self):
		return {
			"name": "OCC character set",
			"version": "1.0.0",
			"description": "Checks font glyphs against the required OCC character set"
			}


	def parameters(self):
		return []


	def run(self, parameters, report):

		occ_set = ["A", "Aacute", "Abreve", "Acircumflex", "Adieresis", "Agrave", "Amacron", "Aogonek", "Aring", "Aringacute", "Atilde", "AE", "AEacute", "B", "C", "Cacute", "Ccaron", "Ccedilla", "Ccircumflex", "Cdotaccent", "D", "Eth", "Dcaron", "Dcroat", "E", "Eacute", "Ebreve", "Ecaron", "Ecircumflex", "Edieresis", "Edotaccent", "Egrave", "Emacron", "Eogonek", "F", "G", "Gbreve", "Gcircumflex", "Gcommaaccent", "Gdotaccent", "H", "Hbar", "Hcircumflex", "I", "IJ", "Iacute", "Ibreve", "Icircumflex", "Idieresis", "Idotaccent", "Igrave", "Imacron", "Iogonek", "Itilde", "J", "Jcircumflex", "K", "Kcommaaccent", "L", "Lacute", "Lcaron", "Lcommaaccent", "Ldot", "Lslash", "M", "N", "Nacute", "Ncaron", "Ncommaaccent", "Eng", "Ntilde", "O", "Oacute", "Obreve", "Ocircumflex", "Odieresis", "Ograve", "Ohungarumlaut", "Omacron", "Oslash", "Oslashacute", "Otilde", "OE", "P", "Thorn", "Q", "R", "Racute", "Rcaron", "Rcommaaccent", "S", "Sacute", "Scaron", "Scedilla", "Scircumflex", "Scommaaccent", "Germandbls", "Schwa", "T", "Tbar", "Tcaron", "Tcedilla", "Tcommaaccent", "U", "Uacute", "Ubreve", "Ucircumflex", "Udieresis", "Ugrave", "Uhungarumlaut", "Umacron", "Uogonek", "Uring", "Utilde", "V", "W", "Wacute", "Wcircumflex", "Wdieresis", "Wgrave", "X", "Y", "Yacute", "Ycircumflex", "Ydieresis", "Ygrave", "Z", "Zacute", "Zcaron", "Zdotaccent", "Iacute_J.loclNLD", "Jacute.loclNLD", "a", "aacute", "abreve", "acircumflex", "adieresis", "agrave", "amacron", "aogonek", "aring", "aringacute", "atilde", "ae", "aeacute", "b", "c", "cacute", "ccaron", "ccedilla", "ccircumflex", "cdotaccent", "d", "eth", "dcaron", "dcroat", "e", "eacute", "ebreve", "ecaron", "ecircumflex", "edieresis", "edotaccent", "egrave", "emacron", "eogonek", "schwa", "f", "g", "gbreve", "gcircumflex", "gcommaaccent", "gdotaccent", "h", "hbar", "hcircumflex", "i", "idotless", "iacute", "ibreve", "icircumflex", "idieresis", "igrave", "ij", "imacron", "iogonek", "itilde", "j", "jdotless", "jcircumflex", "k", "kcommaaccent", "kgreenlandic", "l", "lacute", "lcaron", "lcommaaccent", "ldot", "lslash", "m", "n", "nacute", "napostrophe", "ncaron", "ncommaaccent", "eng", "ntilde", "o", "oacute", "obreve", "ocircumflex", "odieresis", "ograve", "ohungarumlaut", "omacron", "oslash", "oslashacute", "otilde", "oe", "p", "thorn", "q", "r", "racute", "rcaron", "rcommaaccent", "s", "sacute", "scaron", "scedilla", "scircumflex", "scommaaccent", "germandbls", "longs", "t", "tbar", "tcaron", "tcedilla", "tcommaaccent", "u", "uacute", "ubreve", "ucircumflex", "udieresis", "ugrave", "uhungarumlaut", "umacron", "uogonek", "uring", "utilde", "v", "w", "wacute", "wcircumflex", "wdieresis", "wgrave", "x", "y", "yacute", "ycircumflex", "ydieresis", "ygrave", "z", "zacute", "zcaron", "zdotaccent", "iacute_j.loclNLD", "jacute.loclNLD", "f_f", "f_i", "f_l", "f_f_i", "f_f_l", "ordfeminine", "ordmasculine", "nsuperior", "Esacute-cy", "A-cy", "Be-cy", "Ve-cy", "Ge-cy", "Gje-cy", "Gheupturn-cy", "De-cy", "Ie-cy", "Iegrave-cy", "Io-cy", "Zhe-cy", "Ze-cy", "Ii-cy", "Zeacute-cy", "Iishort-cy", "Iigrave-cy", "Ka-cy", "Kje-cy", "El-cy", "Em-cy", "En-cy", "O-cy", "Pe-cy", "Er-cy", "Es-cy", "Te-cy", "U-cy", "Ushort-cy", "Ef-cy", "Ha-cy", "Che-cy", "Tse-cy", "Sha-cy", "Shcha-cy", "Dzhe-cy", "Softsign-cy", "Hardsign-cy", "Yeru-cy", "Lje-cy", "Nje-cy", "Dze-cy", "E-cy", "Ereversed-cy", "I-cy", "Yi-cy", "Je-cy", "Tshe-cy", "Iu-cy", "Ia-cy", "Dje-cy", "Ghestroke-cy", "Zhedescender-cy", "Zedescender-cy", "Kadescender-cy", "Kabashkir-cy", "Endescender-cy", "Esdescender-cy", "Ustraight-cy", "Ustraightstroke-cy", "Hadescender-cy", "Chedescender-cy", "Shha-cy", "Palochka-cy", "Zhebreve-cy", "Abreve-cy", "Aie-cy", "Iebreve-cy", "Schwa-cy", "Imacron-cy", "Odieresis-cy", "Obarred-cy", "Umacron-cy", "Uhungarumlaut-cy", "Esdescender-cy.loclCHU", "De-cy.loclBGR", "El-cy.loclBGR", "a-cy", "be-cy", "ve-cy", "ge-cy", "gje-cy", "gheupturn-cy", "de-cy", "ie-cy", "iegrave-cy", "io-cy", "zhe-cy", "ze-cy", "ii-cy", "iishort-cy", "iigrave-cy", "ka-cy", "kje-cy", "el-cy", "em-cy", "en-cy", "o-cy", "pe-cy", "er-cy", "es-cy", "te-cy", "u-cy", "ushort-cy", "ef-cy", "ha-cy", "che-cy", "tse-cy", "sha-cy", "shcha-cy", "dzhe-cy", "softsign-cy", "hardsign-cy", "yeru-cy", "lje-cy", "nje-cy", "dze-cy", "e-cy", "ereversed-cy", "i-cy", "yi-cy", "je-cy", "tshe-cy", "iu-cy", "ia-cy", "dje-cy", "ghestroke-cy", "zhedescender-cy", "zedescender-cy", "kadescender-cy", "kabashkir-cy", "endescender-cy", "esdescender-cy", "ustraight-cy", "ustraightstroke-cy", "hadescender-cy", "chedescender-cy", "shha-cy", "palochka-cy", "zhebreve-cy", "abreve-cy", "aie-cy", "iebreve-cy", "schwa-cy", "imacron-cy", "odieresis-cy", "obarred-cy", "umacron-cy", "uhungarumlaut-cy", "esacute-cy", "zeacute-cy", "esdescender-cy.loclCHU", "ve-cy.loclBGR", "ge-cy.loclBGR", "de-cy.loclBGR", "zhe-cy.loclBGR", "ze-cy.loclBGR", "ii-cy.loclBGR", "iishort-cy.loclBGR", "iigrave-cy.loclBGR", "ka-cy.loclBGR", "el-cy.loclBGR", "pe-cy.loclBGR", "te-cy.loclBGR", "tse-cy.loclBGR", "sha-cy.loclBGR", "shcha-cy.loclBGR", "softsign-cy.loclBGR", "hardsign-cy.loclBGR", "iu-cy.loclBGR", "be-cy.loclSRB", "en-cy.loclBGR", "che-cy.loclBGR", "Alpha", "Beta", "Gamma", "Delta", "Epsilon", "Zeta", "Eta", "Theta", "Iota", "Kappa", "Lambda", "Mu", "Nu", "Xi", "Omicron", "Pi", "Rho", "Sigma", "Tau", "Upsilon", "Phi", "Chi", "Psi", "Omega", "Alphatonos", "Epsilontonos", "Etatonos", "Iotatonos", "Omicrontonos", "Upsilontonos", "Omegatonos", "Iotadieresis", "Upsilondieresis", "alpha", "beta", "gamma", "delta", "epsilon", "zeta", "eta", "theta", "iota", "kappa", "lambda", "mu", "nu", "xi", "omicron", "pi", "rho", "sigmafinal", "sigma", "tau", "upsilon", "phi", "chi", "psi", "omega", "iotatonos", "iotadieresis", "iotadieresistonos", "upsilontonos", "upsilondieresis", "upsilondieresistonos", "omicrontonos", "omegatonos", "alphatonos", "epsilontonos", "etatonos", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "zero.osf", "one.osf", "two.osf", "three.osf", "four.osf", "five.osf", "six.osf", "seven.osf", "eight.osf", "nine.osf", "zero.tf", "one.tf", "two.tf", "three.tf", "four.tf", "five.tf", "six.tf", "seven.tf", "eight.tf", "nine.tf", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "zero.dnom", "one.dnom", "two.dnom", "three.dnom", "four.dnom", "five.dnom", "six.dnom", "seven.dnom", "eight.dnom", "nine.dnom", "zero.numr", "one.numr", "two.numr", "three.numr", "four.numr", "five.numr", "six.numr", "seven.numr", "eight.numr", "nine.numr", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "fraction", "onehalf", "onethird", "twothirds", "onequarter", "threequarters", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "period", "comma", "colon", "semicolon", "ellipsis", "exclam", "exclamdown", "question", "questiondown", "periodcentered", "bullet", "asterisk", "exclamdbl", "numbersign", "overline", "slash", "backslash", "periodcentered.loclCAT.case", "periodcentered.loclCAT", "numbersign.posf", "period.tf", "comma.tf", "colon.tf", "semicolon.tf", "numbersign.tf", "slash.tf", "parenleft", "parenright", "braceleft", "braceright", "bracketleft", "bracketright", "parenleft.tf", "parenright.tf", "hyphen", "endash", "emdash", "figuredash", "horizontalbar", "underscore", "underscoredbl", "hyphen.tf", "endash.tf", "quotesinglbase", "quotedblbase", "quotedblleft", "quotedblright", "quoteleft", "quoteright", "guillemetleft", "guillemetright", "guilsinglleft", "guilsinglright", "quotedbl", "quotesingle", "colon.calt_time", "quotedblleft.salt_german", "quoteleft.salt_german", "anoteleia", "questiongreek", "emquad", "space", "zerowidthspace", "space.frac", "space.tf", ".notdef", "baht", "cedi", "cent", "colonsign", "currency", "dollar", "dong", "euro", "florin", "franc", "guarani", "hryvnia", "lira", "liraTurkish", "manat", "naira", "peseta", "peso", "ruble", "rupee", "rupeeIndian", "sterling", "tenge", "tugrik", "won", "yen", "cent.posf", "dollar.posf", "euro.posf", "florin.posf", "sterling.posf", "yen.posf", "cent.tf", "dollar.tf", "euro.tf", "florin.tf", "rupee.tf", "sterling.tf", "yen.tf", "bulletoperator", "divisionslash", "equivalence", "integralbt", "integraltp", "logicalnotreversed", "plus", "minus", "multiply", "divide", "equal", "notequal", "greater", "less", "greaterequal", "lessequal", "plusminus", "approxequal", "logicalnot", "asciitilde", "asciicircum", "infinity", "intersection", "integral", "Ohm", "increment", "product", "summation", "radical", "partialdiff", "micro", "orthogonal", "percent", "perthousand", "plus.posf", "minus.posf", "multiply.posf", "divide.posf", "equal.posf", "greater.posf", "less.posf", "plus.tf", "minus.tf", "multiply.tf", "divide.tf", "equal.tf", "greater.tf", "less.tf", "percent.tf", "perthousand.tf", "lozenge", "checkmark", "apple", "at", "ampersand", "paragraph", "section", "copyright", "registered", "published", "trademark", "careof", "degree", "minute", "second", "bar", "brokenbar", "dagger", "literSign", "daggerdbl", "estimated", "numero", "house", "servicemark", "degree.tf", "minute.tf", "second.tf", "apostrophemod", "dieresiscomb", "dotaccentcomb", "gravecomb", "acutecomb", "hungarumlautcomb", "caronvertcomb", "circumflexcomb", "caroncomb", "brevecomb", "ringcomb", "tildecomb", "macroncomb", "commaturnedabovecomb", "commaaccentcomb", "cedillacomb", "ogonekcomb", "acute", "breve", "caron", "caronvert", "cedilla", "circumflex", "dieresis", "dotaccent", "grave", "hungarumlaut", "macron", "ogonek", "ring", "tilde", "dieresiscomb.case", "dotaccentcomb.case", "gravecomb.case", "acutecomb.case", "hungarumlautcomb.case", "circumflexcomb.case", "caroncomb.case", "brevecomb.case", "ringcomb.case", "tildecomb.case", "macroncomb.case", "ogonekcomb.case", "tonos", "dieresistonos", "breve-cy", "brevecomb-cy", "brevecomb-cy.case", "NUL", "zeroslash", "commaturnedabove", "okina", "hairspace", "enspace", "emspace", "enquad", "sixperemspace", "threeperemspace", "fourperemspace", "thinspace", "figurespace", "zerowidthnobreakspace"]
		missing = occ_set
		extra = []

		for g in self.glyphs:
			if g.name in occ_set:
				missing.remove(g.name)
			else:
				extra.append(g.name)
		
		report.note( str( len(self.glyphs) ) + " glyphs total\n-----------------------------------------")

		report.note( str( len(missing) ) + " missing glyphs\n-----------------------------------------")
		missing_output =""
		for g in missing:
			missing_output += g + "\n"
		report.note( missing_output)



		report.note( str( len(extra) ) + " extra glyphs\n-----------------------------------------")
		extra_output =""
		for g in extra:
			extra_output += g + "\n"
		report.note( extra_output)

